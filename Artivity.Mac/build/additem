#!/bin/bash

function show_help (){
	echo "Create a new item for sparkle appcast.
Options:
-s|--source: Source from where to pull the appcast file.
-t|--title: Title of the item.
-v|--version: Version of the item.
-f|--file: File of the item.
-p|--private: Private key file.
-u|--url: Target path where the file and release notes can be downloaded from.
Example: additem -s=https://example.com/download/appcast.xml -t=\"Version 0.9.1\" -v=0.9.1 -f=update.dmg  -p=private.pem -u=https://example.com/downloads/0.9.1/"
}

function trim()
{
	local var="$*"
    var="${var#"${var%%[![/]]*}"}"   # remove leading whitespace characters
    var="${var%"${var##*[![/]]}"}"   # remove trailing whitespace characters
    echo -n "$var"
}


for i in "$@"
do
case $i in
    -h|--help)
	show_help
	exit
	;;
    -s=*|--source=*)
    SOURCE="${i#*=}"
    shift # past argument=value
    ;;
    -t=*|--title=*)
    TITLE="${i#*=}"
    shift # past argument=value
    ;;
    -v=*|--version=*)
    VERSION="${i#*=}"
    shift # past argument=value
    ;;
	-f=*|--file=*)
    FILE="${i#*=}"
    shift # past argument=value
    ;;
	-p=*|--private=*)
    PRIVATE="${i#*=}"
    shift # past argument=value
    ;;
	-u=*|--url=*)
    URL="${i#*=}"
    shift # past argument=value
    ;;
    *)
            # unknown option
    ;;
esac
done

XSL='<?xml version="1.0" ?>
<xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">

	<!-- Parameter -->
	<xsl:param name="title">title</xsl:param>
	<xsl:param name="relNotes">relNotes</xsl:param>
	<xsl:param name="pubDate">pubDate</xsl:param>
	<xsl:param name="url">url</xsl:param>
	<xsl:param name="version">version</xsl:param>
	<xsl:param name="dsaSig">dsaSig</xsl:param>
	<xsl:param name="length">length</xsl:param>


	<xsl:output method="xml" encoding="utf-8" />
	<!-- Generic identity template -->
	<xsl:template match="node()|@*">
		<xsl:copy>
			<xsl:apply-templates select="@*"/>
			<xsl:apply-templates/>
		</xsl:copy>
	</xsl:template>

	<!-- If an element is a child of library, copy the content and add
       type element. -->
	<xsl:template match="channel/*">

			<xsl:copy>
            <xsl:copy-of select="node() | @*"/>
        </xsl:copy>
		 <xsl:if test="not(following-sibling::*)">
			<xsl:call-template name="create-item"/>
		</xsl:if>
	</xsl:template>

	<xsl:template name="create-item">
		<item>
		<title><xsl:value-of select="$title"/></title>
		<releaseNotesLink><xsl:value-of select="$relNotes"/></releaseNotesLink>
		<pubDate><xsl:value-of select="$pubDate"/></pubDate>
		<enclosure url="{$url}"
					   version="{$version}"
					   dsaSignature="{$dsaSig}"
					   length="{$length}"
					   type="application/octet-stream" />
		 </item>
	</xsl:template>
</xsl:stylesheet>'

RESULT="`wget -qO- ${SOURCE}`"
TIME="`date -R`"
LENGTH="`stat --printf=\"%s\" ${FILE}`"

openssl=/usr/bin/openssl
DSASIG="`$openssl dgst -sha1 -binary < "${FILE}" | $openssl dgst -dss1 -sign "${PRIVATE}" | $openssl enc -base64`"

RELNOTES="${URL}/changelog.html"

filename="${FILE##*/}"

FILEURL="${URL}/${filename}"

xsltproc --stringparam title "${TITLE}" \
		 --stringparam version "${VERSION}" \
 		 --stringparam pubDate "${TIME}" \
		 --stringparam length "${LENGTH}" \
		 --stringparam dsaSig "${DSASIG}" \
		 --stringparam relNotes "${RELNOTES}" \
		 --stringparam url "${FILEURL}" \
		 <(echo "${XSL}") <(echo "${RESULT}")




# End of file
