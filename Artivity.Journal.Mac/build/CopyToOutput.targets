<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
	<!-- These targets will fire after mmp creates your bundle but before code signing -->
	<PropertyGroup>
		<CreateAppBundleDependsOn>$(CreateAppBundleDependsOn);CopySparkle;CopyApid;CopyErrorPages</CreateAppBundleDependsOn>
	</PropertyGroup>


	<!-- Since this has inputs/outputs, it will fire only when the inputs are changed or the output does not exist -->
	<Target Name="CopySparkle" >
		<Message Text="Copying Sparkle to app bundle.." />

		<RemoveDir Directories="$(AppBundleDir)/Contents/Frameworks/Sparkle.framework"/>

		<MakeDir Directories="$(AppBundleDir)/Contents/Frameworks"/>

		<Exec Command="ditto -xk &quot;$(ProjectDir)/sparkle.framework.zip&quot; &quot;$(AppBundleDir)/Contents/Frameworks&quot;" />

	</Target>


	<!-- Since this has inputs/outputs, it will fire only when the inputs are changed or the output does not exist -->
	<Target Name="CopyApid">
		<Message Text="Copying APID to app bundle.." />

		<ItemGroup>
			<ApidBundleFiles Include="$(TargetDir)/artivity-apid.app/**/*.*"/>
		</ItemGroup>

		<MakeDir Directories="$(AppBundleDir)/Contents/Applications"/>

		<!-- See: http://stackoverflow.com/questions/1274480/two-executables-in-one-bundle-on-mac -->
    		<Copy SourceFiles="@(ApidBundleFiles)" DestinationFiles="@(ApidBundleFiles->'$(AppBundleDir)/Contents/Applications/artivity-apid.app/%(RecursiveDir)%(Filename)%(Extension)')" />
  	</Target>


			<!-- Since this has inputs/outputs, it will fire only when the inputs are changed or the output does not exist -->
		<Target Name="CopyErrorPages">
				<Message Text="Copying error pages to app bundle.." />

				<ItemGroup>
					<ErrorBundleFiles Include="$(ProjectDir)/error/**/*.*"/>
				</ItemGroup>

				<MakeDir Directories="$(AppBundleDir)/Contents/Resources/error"/>
		    <Copy SourceFiles="@(ErrorBundleFiles)" DestinationFiles="@(ErrorBundleFiles->'$(AppBundleDir)/Contents/Resources/error/%(RecursiveDir)%(Filename)%(Extension)')" />
		  </Target>
</Project>
